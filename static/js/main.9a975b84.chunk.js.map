{"version":3,"sources":["actions/actions-countries.js","reducers/countries-reducer.js","reducers/index.js","DevTools .js","store/index.js","presentational/navigation.component.js","presentational/home.component.js","presentational/contact.component.js","presentational/not-found.component.js","presentational/flag.component.js","presentational/flag-list.component.js","containers/flag-container.component.js","presentational/country-details.component.js","containers/country-detail-container.component.js","containers/continents-container.component.js","routes.js","index.js"],"names":["GET_COUNTRIES","GET_COUNTRY","DELETE_COUNTRY","SEARCH_COUNTRIES","SET_CONTINENT","getCountries","type","deleteCountry","id","searchCountries","searchText","setContinent","name","initialState","countries","selectedCountry","visibleCountries","countriesReducer","state","arguments","length","undefined","action","Object","assign","find","country","parseInt","foundCountries","filter","toLowerCase","includes","notDeletedCountries","notDeletedVisibleCountries","continentCountries","continent","reducers","combineReducers","createDevTools","react_default","a","createElement","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","redux_devtools_log_monitor_lib_default","store","createStore","DevTools","instrument","Navigation","props","className","es","to","children","Home","Contact","NotFound","CountryFlag","src","imageUrl","alt","CountryFlagList","map","key","flag_component","onClick","bind","CountryFlagContainer","this","dispatch","event","target","value","onChange","search","flag_list_component","Component","connect","CountryDetails","populace","capital","currency","CountryDetailsContainer","params","country_details_component","ContinentsContainer","_this","e","chooseContinent","routes","path","component","render","react_redux_es","history","hashHistory","DevTools_","document","getElementById"],"mappings":"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","file":"static/js/main.9a975b84.chunk.js","sourcesContent":["export const GET_COUNTRIES = 'GET_COUNTRIES';\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\nexport const DELETE_COUNTRY = 'DELETE_COUNTRY';\r\nexport const SEARCH_COUNTRIES = 'SEARCH_COUNTRIES';\r\nexport const SET_CONTINENT = 'SET_CONTINENT';\r\n\r\n\r\nexport function getCountries() {\r\n    return {\r\n        type: GET_COUNTRIES\r\n    }\r\n}\r\n\r\nexport function deleteCountry(id) {\r\n    return {\r\n        type: DELETE_COUNTRY,\r\n        id\r\n    };\r\n}\r\n\r\nexport function getCountry(id) {\r\n    return {\r\n        type: GET_COUNTRY,\r\n        id\r\n    }\r\n}\r\n\r\nexport function searchCountries(searchText) {\r\n    return {\r\n        type: SEARCH_COUNTRIES,\r\n        searchText\r\n    }\r\n}\r\n\r\nexport function setContinent(name) {\r\n    return {\r\n        type: SET_CONTINENT,\r\n        name\r\n    }\r\n}","import { GET_COUNTRIES, GET_COUNTRY, SEARCH_COUNTRIES, DELETE_COUNTRY, SET_CONTINENT } from '../actions/actions-countries';\r\nimport countriesData from '../data/countries.json';\r\n\r\nconst initialState = {\r\n    countries: countriesData,\r\n    selectedCountry: {},\r\n    visibleCountries: []\r\n};\r\n\r\nconst countriesReducer = function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_COUNTRIES:\r\n            return Object.assign({}, state, {countries: state.countries});\r\n\r\n        case GET_COUNTRY:\r\n            const selectedCountry = state.countries.find(country => country.id === parseInt (action.id));\r\n            return Object.assign({}, state, {selectedCountry});\r\n\r\n        case SEARCH_COUNTRIES:\r\n            const foundCountries = state.countries.filter(country => country.name.toLowerCase().includes(action.searchText.toLowerCase()));\r\n            return Object.assign({}, state, {visibleCountries: foundCountries});\r\n\r\n        case DELETE_COUNTRY:\r\n            const notDeletedCountries = state.countries.filter(country => country.id !== action.id);\r\n            const notDeletedVisibleCountries = state.visibleCountries.filter(country => country.id !== action.id);\r\n            return Object.assign({}, state, {countries: notDeletedCountries, visibleCountries: notDeletedVisibleCountries});\r\n\r\n        case SET_CONTINENT:\r\n            const continentCountries = state.countries.filter(country => country.continent === action.name);\r\n            return Object.assign({}, state, {visibleCountries: continentCountries});\r\n\r\n        default: return state; \r\n    }\r\n};\r\n\r\nexport default countriesReducer;","import { combineReducers } from 'redux';\r\nimport countriesReducer  from './countries-reducer';\r\n\r\nconst reducers = combineReducers({\r\n    countriesReducer\r\n});\r\n\r\nexport default reducers;","import React from 'react';\r\nimport { createDevTools } from 'redux-devtools';\r\nimport LogMonitor from 'redux-devtools-log-monitor';\r\nimport DockMonitor from 'redux-devtools-dock-monitor';\r\n\r\nexport default createDevTools(\r\n  <DockMonitor toggleVisibilityKey='ctrl-h'\r\n               changePositionKey='ctrl-q'>\r\n    <LogMonitor />\r\n  </DockMonitor>\r\n);","import { createStore } from 'redux';\r\nimport reducers from '../reducers/index';\r\nimport DevTools from '../DevTools ';\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    DevTools.instrument()\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap-theme.css';\r\n\r\nconst Navigation = props => (\r\n    <div>\r\n        <nav className=\"navbar navbar-default\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">CountriesApp</Link>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li><Link to=\"/countries\">Countries</Link></li>\r\n                        <li><Link to=\"/continents\">Continents</Link></li>\r\n                        <li><Link to=\"/contact\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <div className=\"container-fluid\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Home = () => (\r\n    <h1>Welcome to Countries App !</h1>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Contact = () => (\r\n    <h1>Street: Route 66</h1>\r\n);\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <h1>Error 404...page NOT found !</h1>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport '../country.css'\r\n\r\nconst CountryFlag = (props) => (\r\n    <div className=\"country-logo-wrapper\">\r\n        <img className=\"country-logo\" src={props.country.imageUrl} alt=\"country\" />\r\n    </div>\r\n);\r\n\r\nexport default CountryFlag;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport CountryFlag from '../presentational/flag.component';\r\n\r\nconst CountryFlagList = (props) => (\r\n    <div className=\"countries-list\">\r\n        {props.countries.map(country => {\r\n            return (\r\n                <div className=\"single-country\" key={country.id}>\r\n                    <Link className='logo' to={'countries/country/' + country.id}>\r\n                        <CountryFlag country={country} />\r\n                    </Link>\r\n                    <button onClick={props.deleteCountry.bind(null, country.id)}>DELETE</button>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n);\r\n\r\nexport default CountryFlagList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CountryFlagList from '../presentational/flag-list.component';\r\nimport { getCountries, searchCountries, deleteCountry } from '../actions/actions-countries';\r\n\r\nclass CountryFlagContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCountries());\r\n        this.props.dispatch(searchCountries(''));\r\n    }\r\n\r\n    search(event) {\r\n        this.props.dispatch(searchCountries(event.target.value));\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        this.props.dispatch(deleteCountry(id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"search text-center\">\r\n                    <input type=\"text\" onChange={this.search.bind(this)}/>\r\n                </div>\r\n                <CountryFlagList countries={this.props.visibleCountries} deleteCountry={this.deleteCountry.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (store) {\r\n    return {\r\n        countries: store.countriesReducer.countries,\r\n        visibleCountries: store.countriesReducer.visibleCountries\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CountryFlagContainer);\r\n","import React from 'react';\r\n\r\nconst CountryDetails = (props) => (\r\n    <div className=\"country-wrapper\">\r\n        <header>\r\n            <img className=\"country-photo\" src={props.country.imageUrl} alt=\"country\" />\r\n        </header>\r\n        <div className=\"country-info\">\r\n            <h1>{props.country.name}</h1>\r\n            <h2>Kontynent: {props.country.continent}</h2>\r\n\r\n            <div className=\"info\">\r\n                <div>\r\n                    <span>{props.country.populace}</span>\r\n                    <span>Ludność[mln]</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{props.country.capital}</span>\r\n                    <span>Stolica</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{props.country.currency}</span>\r\n                    <span>Waluta</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CountryDetails;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCountry } from '../actions/actions-countries';\r\nimport CountryDetails from '../presentational/country-details.component';\r\n\r\nclass CountryDetailsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCountry(this.props.params.id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CountryDetails country={this.props.selectedCountry} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (store) {\r\n    return {\r\n        selectedCountry: store.countriesReducer.selectedCountry\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CountryDetailsContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setContinent, deleteCountry } from '../actions/actions-countries';\r\nimport CountryFlagList from '../presentational/flag-list.component';\r\n\r\nclass ContinentsContainer extends Component {\r\n\r\n    chooseContinent(event) {\r\n        this.props.dispatch(setContinent(event.target.value))\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        this.props.dispatch(deleteCountry(id));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(setContinent('Europa'));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <select className=\"select-button\" onChange={e => this.chooseContinent(e)}>\r\n                    <option value=\"Europa\">Europa</option>\r\n                    <option value=\"Afryka\">Afryka</option>\r\n                </select>\r\n                <CountryFlagList countries={this.props.visibleCountries} deleteCountry={this.deleteCountry.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (store) {\r\n    return {\r\n        visibleCountries: store.countriesReducer.visibleCountries\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContinentsContainer);","import React from 'react';\r\nimport { Route, IndexRoute } from 'react-router';\r\nimport Navigation from './presentational/navigation.component';\r\nimport Home from './presentational/home.component';\r\nimport Contact from './presentational/contact.component';\r\nimport NotFound from './presentational/not-found.component';\r\nimport CountryFlagContainer from './containers/flag-container.component';\r\nimport CountryDetailsContainer from './containers/country-detail-container.component';\r\nimport ContinentsContainer from './containers/continents-container.component';\r\n\r\n\r\nexport default (\r\n    <Route path='/' component={Navigation}>\r\n        <IndexRoute component={Home}/>\r\n        <Route path='countries' >\r\n            <IndexRoute component={CountryFlagContainer}/>\r\n            <Route path='country/:id' component={CountryDetailsContainer}/>\r\n        </Route>\r\n        <Route path='continents' component={ContinentsContainer}/>\r\n        <Route path='contact' component={Contact}/>\r\n        <Route path='*' component={NotFound}/>\r\n    </Route>\r\n);","import React from 'react';\nimport { render } from 'react-dom';\nimport { Router, hashHistory } from 'react-router';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport DevTools from './DevTools ';\nimport routes from './routes';\nimport { getCountries } from './actions/actions-countries';\n\nstore.dispatch(getCountries());\n\nrender(\n    <Provider store={store}>\n        <Router history={hashHistory} routes={routes}/>\n        <DevTools />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}